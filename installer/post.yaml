---
- name: "Upload dlrn-deps.repo file"
  tags: [cs10]
  ansible.builtin.template:
    src: "templates/dlrn-deps.repo.j2"
    dest: "/home/{{ worker_name }}/data/repos/dlrn-deps.repo"
    owner: "{{ worker_name }}"
    group: "{{ worker_name }}"
    mode: '0644'

- name: "Create delorean-deps.repo symlink"
  tags: [cs10]
  ansible.builtin.file:
    src: "/home/{{ worker_name }}/data/repos/dlrn-deps.repo"
    dest: "/home/{{ worker_name }}/data/repos/delorean-deps.repo"
    owner: "{{ worker_name }}"
    group: "{{ worker_name }}"
    state: link

- name: "Create deps, build-deps and rabbitmq-deps repo"
  tags: [cs10]
  ansible.builtin.file:
    path: "/home/{{ worker_name }}/data/repos/{{ item }}"
    owner: "{{ worker_name }}"
    group: "{{ worker_name }}"
    state: directory
    mode: '0755'
  with_items:
    - "deps"
    - "build-deps"
    - "messaging-rabbitmq"
    - "nfv"

- name: "Install required packages"
  tags: [tooling]
  become: true
  ansible.builtin.package:
    name:
      - less
      - rpmdevtools
      - git

- name: "Temporary install centos-packager and neovim from EPEL for CS9"
  tags: [tooling]
  shell:
    cmd: |
      sudo {{ ansible_pkg_mgr }} install -y 'dnf-command(config-manager)';
      sudo {{ ansible_pkg_mgr }} config-manager --set-enabled crb;
      sudo {{ ansible_pkg_mgr }} install -y epel-release;
      sudo {{ ansible_pkg_mgr }} install -y centos-packager neovim;
      sudo {{ ansible_pkg_mgr }} remove -y epel-release
  changed_when: false
  when: ansible_distribution_major_version|int == 9

- name: "Create some required directories"
  tags: [cs10, tooling]
  ansible.builtin.file:
    path: "/home/{{ worker_name }}/{{ item }}"
    owner: "{{ worker_name }}"
    group: "{{ worker_name }}"
    state: directory
    mode: '0755'
  with_items:
    - "workspace"
    - ".bashrc.d"
    - ".config/nvim"
    - ".local/share/nvim/site/autoload"

- name: "Add some rules in bashrc"
  tags: [tooling]
  copy:
    content: |
      set -o vi
      alias vim=nvim
      source ~/.functions.sh
    dest: "/home/{{ worker_name }}/.bashrc.d/rc"
    owner: "{{ worker_name }}"
    group: "{{ worker_name }}"
    mode: 0640

- name: "Add git config"
  tags: [tooling]
  copy:
    content: |
      [alias]
      l = !"l() { git log --pretty=oneline -n ${1:-'20'} --graph --abbrev-commit; }; l"
      s = status -s
      d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
      tags = tag -l
      branches = branch -a
      remotes = remote -v

      [user]
      name = Joel Capitao
      email = "jcapitao@redhat.com"
    dest: "/home/{{ worker_name }}/.gitconfig"
    owner: "{{ worker_name }}"
    group: "{{ worker_name }}"
    mode: 0640

- name: "Configure tmux"
  tags: [tooling]
  copy:
    content: |
      bind -r h select-pane -L
      bind -r j select-pane -D
      bind -r k select-pane -U
      bind -r l select-pane -R
      # windows navigation
      unbind n
      unbind p
      bind -r C-h previous-window # select previous window
      bind -r C-l next-window # select next window
    dest: "/home/{{ worker_name }}/.tmux.conf"
    owner: "{{ worker_name }}"
    group: "{{ worker_name }}"
    mode: 0640

- name: "Copy some files"
  tags: [cs10, tooling]
  copy:
    src: "files/{{ item }}"
    dest: "/home/{{ worker_name }}/{{ item }}"
    owner: "{{ worker_name }}"
    group: "{{ worker_name }}"
    mode: 0644
  with_items:
    - ".functions.sh"
    - ".config/nvim/init.vim"

- name: "Install vim-plug"
  tags: [tooling]
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
    dest: "/home/{{ worker_name }}/.local/share/nvim/site/autoload/"
    owner: "{{ worker_name }}"
    group: "{{ worker_name }}"
    mode: 0644

- name: Add patch and buildingo to be interpreted as plain text
  tags: [cs10]
  ansible.builtin.lineinfile:
    path: /etc/httpd/conf.d/25-{{ web_domain}}.conf
    regexp: '^    AddType text/plain'
    line: '    AddType text/plain yaml yml patch buildinfo'
  notify: Restart httpd
